<?xml version="1.0" encoding="ISO-8859-1"?>
<SourceFile><Source><![CDATA[Option Explicit
Implements IJabacoControl
Implements MouseListener 
Implements MouseMotionListener
Implements KeyListener
Implements ActionListener 
Implements FocusListener 

Event Click()
Event GotFocus()
Event KeyDown(KeyCode As Integer, Shift As Integer)
Event KeyPress(KeyAscii As Integer)
Event KeyUp(KeyCode As Integer, Shift As Integer)
Event LostFocus()
Event MouseEntered()
Event MouseExited() 
Event MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
Event MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)
Event MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)

Dim myMouseIcon As IResource
Dim myPicturePath As IResource
Dim myRolloverPicturePath As IResource
Dim myTag As String

' ******************************** INIT THIS CONTROL ********************************

Public Property Get Parent() As JButton
   Parent = Base
End Property

Public Sub Class_Initialize()
   Call Parent.addFocusListener(Me)
   Call Parent.addMouseListener(Me)
   Call Parent.addMouseMotionListener(Me)
   Call Parent.addKeyListener(Me)
   Call Parent.addActionListener(Me)
   
End Sub

' ******************************** DEFAULT FOCUS - EVENTS ********************************

Public Sub focusGained(arg2 As FocusEvent)
   Raiseevent GotFocus()
End Sub

Public Sub focusLost(arg2 As FocusEvent)
   Raiseevent LostFocus()
End Sub

' ******************************** DEFAULT MOUSE - EVENTS ********************************

Public Sub mouseMoved(e As MouseEvent) 
    RaiseEvent MouseMove(getVBMouseButton(e),getVBMouseShift(e),e.getX(),e.getY())
End Sub

Public Sub mouseDragged(e As MouseEvent) 
    RaiseEvent MouseMove(getVBMouseButton(e),getVBMouseShift(e),e.getX(),e.getY())
End Sub

Public Sub mousePressed(e As MouseEvent) 
    RaiseEvent MouseDown(getVBMouseButton(e),getVBMouseShift(e),e.getX(),e.getY())
End Sub

Public Sub mouseReleased(e As MouseEvent) 
   RaiseEvent MouseUp(getVBMouseButton(e),getVBMouseShift(e),e.getX(),e.getY())
End Sub

Public Sub mouseClicked(e As MouseEvent) 
    'done by actionlistener
End Sub

Public Sub mouseEntered(e As MouseEvent) 
    RaiseEvent MouseEntered()
End Sub 

Public Sub mouseExited(e As MouseEvent) 
    RaiseEvent MouseExited()
End Sub

' ******************************** DEFAULT KEY - EVENTS ********************************

Public Sub keyReleased(e As KeyEvent) 
   RaiseEvent KeyUp(e.getKeyCode, KeyEventToShiftConstant(e))
End Sub

Public Sub keyTyped(e As KeyEvent)
   RaiseEvent KeyPress(e.getKeyChar)
End Sub

Public Sub keyPressed(e As KeyEvent)
    RaiseEvent KeyDown(e.getKeyCode, KeyEventToShiftConstant(e))
End Sub 

Public Sub actionPerformed(arg As ActionEvent)
   RaiseEvent Click()
End Sub

' ******************************** SPECIAL FUNCTIONS ********************************

Public Function toString() As String
   toString = Caption
End Function

Public Property Get Caption() As String
    Caption = Me.getLabel()
End Property

Public Property Let Caption(s As String)
    Me.setLabel(s)
End Property

Public Property Get Picture() As #IResource
   Picture = myPicturePath
End Property

Public Property Let Picture(Path As #IResource)
   On Error Goto ERROUT
   If Len(Path) > 0 Then 
      myPicturePath = Path
      Me.setIcon LoadIcon(myPicturePath)
   End If
ERROUT:
End Property

Public Property Get RolloverPicture() As #IResource
   RolloverPicture = myRolloverPicturePath
End Property

Public Property Let RolloverPicture(Path As #IResource)
   On Error Goto ERROUT
   If Len(Path) > 0 Then 
      myRolloverPicturePath = Path      
      Base.setRolloverEnabled True
      Base.setRolloverIcon LoadIcon(myRolloverPicturePath)
      Base.setRolloverSelectedIcon Base.getRolloverIcon 
      Base.setSelectedIcon Base.getRolloverIcon 
      Base.setPressedIcon Base.getRolloverIcon 
   End If
ERROUT:
End Property

Public Property Let PicturePosition(v As fmPicturePosition)
   Select Case v
      Case fmPicturePositionLeftTop
         Me.setVerticalTextPosition SwingConstants.TOP
         Me.setHorizontalTextPosition SwingConstants.RIGHT 
      Case fmPicturePositionLeftCenter
         Me.setVerticalTextPosition SwingConstants.CENTER
         Me.setHorizontalTextPosition SwingConstants.RIGHT 
      Case fmPicturePositionLeftBottom
         Me.setVerticalTextPosition SwingConstants.BOTTOM
         Me.setHorizontalTextPosition SwingConstants.RIGHT 
      Case fmPicturePositionRightTop
         Me.setVerticalTextPosition SwingConstants.TOP
         Me.setHorizontalTextPosition SwingConstants.LEFT 
      Case fmPicturePositionRightCenter
         Me.setVerticalTextPosition SwingConstants.CENTER
         Me.setHorizontalTextPosition SwingConstants.LEFT  
      Case fmPicturePositionRightBottom
         Me.setVerticalTextPosition SwingConstants.BOTTOM
         Me.setHorizontalTextPosition SwingConstants.LEFT 
      Case fmPicturePositionAboveLeft
         Me.setVerticalTextPosition SwingConstants.BOTTOM
         Me.setHorizontalTextPosition SwingConstants.CENTER 
      Case fmPicturePositionAboveCenter
         Me.setVerticalTextPosition SwingConstants.BOTTOM
         Me.setHorizontalTextPosition SwingConstants.CENTER 
      Case fmPicturePositionAboveRight
         Me.setVerticalTextPosition SwingConstants.BOTTOM
         Me.setHorizontalTextPosition SwingConstants.CENTER 
      Case fmPicturePositionBelowLeft
         Me.setVerticalTextPosition SwingConstants.TOP
         Me.setHorizontalTextPosition SwingConstants.LEFT 
      Case fmPicturePositionBelowCenter
         Me.setVerticalTextPosition SwingConstants.TOP
         Me.setHorizontalTextPosition SwingConstants.CENTER 
      Case fmPicturePositionBelowRight
         Me.setVerticalTextPosition SwingConstants.TOP
         Me.setHorizontalTextPosition SwingConstants.CENTER 
      Case fmPicturePositionCenter
         Me.setVerticalTextPosition SwingConstants.CENTER
         Me.setHorizontalTextPosition SwingConstants.CENTER 
   End Select
End Property

Public Property Get PicturePosition() As fmPicturePosition
   Select Case Me.getHorizontalTextPosition 
      Case SwingConstants.LEFT 
         Select Case Me.getVerticalTextPosition 
            Case SwingConstants.TOP:     PicturePosition = fmPicturePositionLeftTop
            Case SwingConstants.CENTER:  PicturePosition = fmPicturePositionLeftCenter
            Case SwingConstants.BOTTOM:  PicturePosition = fmPicturePositionLeftBottom
         End Select
      Case SwingConstants.RIGHT 
         Select Case Me.getVerticalTextPosition 
            Case SwingConstants.TOP:     PicturePosition = fmPicturePositionRightTop
            Case SwingConstants.CENTER:  PicturePosition = fmPicturePositionRightCenter
            Case SwingConstants.BOTTOM:  PicturePosition = fmPicturePositionRightBottom
         End Select
      Case SwingConstants.CENTER 
         Select Case Me.getVerticalTextPosition 
            Case SwingConstants.TOP:     PicturePosition = fmPicturePositionBelowCenter
            Case SwingConstants.CENTER:  PicturePosition = fmPicturePositionCenter
            Case SwingConstants.BOTTOM:  PicturePosition = fmPicturePositionAboveCenter
         End Select
   End Select
End Property











' ******************************** SAME IN ALL JABACO CONTROLS ********************************

Public Property Get FontName() As String 
   FontName = Parent.getFont.GetFontName()
End Property

Public Property Let FontName(val As String)
   Parent.setFont(New Font(val, IIF(FontBold, BOLD, 0) OR IIF(FontItalic, ITALIC, 0), VBFontSizeToJFontSize(FontSize)))
End Property

Public Property Get FontBold() As Boolean 
   FontBold = Parent.getFont.isBold()
End Property

Public Property Let FontBold(val As Boolean)
   Parent.setFont(New Font(FontName, IIF(val, BOLD, 0) OR IIF(FontItalic, ITALIC, 0), VBFontSizeToJFontSize(FontSize)))
End Property

Public Property Get FontItalic() As Boolean
   FontItalic = Parent.getFont.isItalic()
End Property

Public Property Let FontItalic(val As Boolean)
   Parent.setFont(New Font(FontName, IIF(FontBold, BOLD, 0) OR IIF(val, ITALIC, 0), VBFontSizeToJFontSize(FontSize)))
End Property

Public Property Get FontSize() As Integer 
   FontSize = (JFontSizeToVBFontSize(Font.getSize()))
End Property

Public Property Let FontSize(val As Integer)
   Parent.setFont(New Font(FontName, IIF(FontBold, BOLD, 0) Or IIF(FontItalic, ITALIC, 0), VBFontSizeToJFontSize(val)))
End Property

Public Property Get Font() As Font
   Font = Parent.getFont()
End Property

Public Property Get BackColor() As Long
   BackColor = ColortoRGB(Base.getBackground())
End Property

Public Property Let BackColor(v As Long)
   Base.setBackground(RGBtoColor(v))
End Property

Public Property Get ForeColor() As Long
   ForeColor = ColortoRGB(Base.getForeground())
End Property

Public Property Let ForeColor(v As Long)
    Base.setForeground(RGBtoColor(v))
End Property

Public Property Get Width() As Single
    Width = Me.getSize.Width
End Property

Public Property Let Width(v As Single)
    Me.setSize(v, Me.getSize.Height)
End Property

Public Property Get Height() As Single
    Height = Me.getSize.Height
End Property

Public Property Let Height(v As Single)
    Me.setSize(Me.getSize.Width, v)
End Property

Public Property Get Left() As Single
    Left = Me.getLocation.x
End Property

Public Property Let Left(v As Single)
    Me.setLocation(v, Me.getLocation.y)
End Property

Public Property Get Top() As Single
    Top = Me.getLocation.y
End Property

Public Property Let Top(v As Single)
    Me.setLocation(Me.getLocation.x, v)
End Property

Public Property Get ToolTip() As String 
    ToolTip = Parent.getToolTipText()
End Property

Public Property Let ToolTip(v As String)
	If Len(v) = 0 Then 
	    Parent.setToolTipText(Null)
    Else
	    Parent.setToolTipText(v)
    End If
End Property

Public Property Get Enabled() As Boolean 
   Enabled = Base.isEnabled()
End Property

Public Property Let Enabled(v As Boolean)
   Call Base.setEnabled(v)
End Property

Public Property Get Visible() As Boolean 
    Visible = Base.isVisible()
End Property

Public Property Let Visible(v As Boolean)
    Base.setVisible v
End Property

Public Property Get Tag() As String 
   Tag = myTag
End Property

Public Property Let Tag(v As String)
   myTag = v
End Property

Public Property Get MousePointer() As MousePointerConstants
   MousePointer = JCursorToVBMousePointer(Parent.getCursor())
End Property

Public Property Let MousePointer(v As MousePointerConstants)
   Call Parent.setCursor(VBMousePointerToJCursor(v))
End Property

Public Property Get MouseIcon() As #IResource 
   MouseIcon = myMouseIcon
End Property

Public Property Let MouseIcon(v As #IResource)
   myMouseIcon = v
   Call Parent.setCursor(VBMouseIconToJCursor(v, Me))
End Property

Public Property Get CanGetFocus() As Boolean
   CanGetFocus = Parent.isFocusable
End Property

Public Property Let CanGetFocus(v As Boolean)
   Parent.setFocusable v
End Property

Public Sub SetFocus()
   Parent.requestFocus 
End Sub

Public Sub Refresh()
   Call Parent.invalidate()
   Call Parent.repaint(0, 0, 0, Me.Width, Me.Height)
End Sub


]]></Source><Param Name="(Name)" Value="CommandButton"/><Param Name="(SuperClass)" Value="javax/swing/JButton"/><Param Name="(Type)" Value="Class"/><Param Name="(Access)" Value="Public"/><Param Name="(NameSpace)" Value="VB"/></SourceFile>
